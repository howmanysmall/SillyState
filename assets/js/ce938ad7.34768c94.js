"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[566],{47660:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new [SillyState] object.","params":[{"name":"Defaults","desc":"The default state. This must be a table.","lua_type":"T"},{"name":"ValidationFunction?","desc":"A `t`-like validation function. Used in `assert`.","lua_type":"(Value: T) -> (boolean, string?)"}],"returns":[{"desc":"","lua_type":"SillyState<T>"}],"function_type":"static","source":{"line":41,"path":"src/init.lua"}},{"name":"Is","desc":"Used to validate if the Value is a [SillyState].","params":[{"name":"Value","desc":"The value you are checking.","lua_type":"any"}],"returns":[{"desc":"True iff the value is a [SillyState].","lua_type":"boolean"}],"function_type":"static","source":{"line":51,"path":"src/init.lua"}},{"name":"Copy","desc":"Creates a frozen deep copy of the state.","params":[],"returns":[{"desc":"The frozen deep copy of the state.","lua_type":"T"}],"function_type":"method","source":{"line":59,"path":"src/init.lua"}},{"name":"Get","desc":"Gets the value at the given key in the state table.","params":[{"name":"Key","desc":"The key to get the value from.","lua_type":"string"}],"returns":[{"desc":"","lua_type":"unknown"}],"function_type":"method","source":{"line":68,"path":"src/init.lua"}},{"name":"Set","desc":"Sets the value to the given key in the state table.","params":[{"name":"Key","desc":"The key to get the value from.","lua_type":"string"},{"name":"Value","desc":"The value you are setting with.","lua_type":"unknown"}],"returns":[],"function_type":"method","source":{"line":77,"path":"src/init.lua"}},{"name":"Destroy","desc":"Used to cleanup the [SillyState] object.","params":[],"returns":[],"function_type":"method","source":{"line":88,"path":"src/init.lua"}}],"properties":[],"types":[],"name":"SillyState","desc":"The most simple state management library for Roblox.","source":{"line":13,"path":"src/init.lua"}}')}}]);